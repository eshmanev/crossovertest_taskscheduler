//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Trial.Scheduler.Client.Service {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Service.IRegistrator", CallbackContract=typeof(Trial.Scheduler.Client.Service.IRegistratorCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IRegistrator {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrator/RegisterClient", ReplyAction="http://tempuri.org/IRegistrator/RegisterClientResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trial.Scheduler.Contracts.Dto.SchedulerErrorDto), Action="http://tempuri.org/IRegistrator/RegisterClientSchedulerErrorDtoFault", Name="SchedulerErrorDto", Namespace="http://schemas.datacontract.org/2004/07/Trial.Scheduler.Contracts.Dto")]
        void RegisterClient(string clientName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrator/RegisterClient", ReplyAction="http://tempuri.org/IRegistrator/RegisterClientResponse")]
        System.Threading.Tasks.Task RegisterClientAsync(string clientName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRegistratorCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrator/Execute", ReplyAction="http://tempuri.org/IRegistrator/ExecuteResponse")]
        Trial.Scheduler.Contracts.Dto.ExecuteCommandResponse Execute(Trial.Scheduler.Contracts.Dto.ExecuteCommandRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRegistratorChannel : Trial.Scheduler.Client.Service.IRegistrator, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegistratorClient : System.ServiceModel.DuplexClientBase<Trial.Scheduler.Client.Service.IRegistrator>, Trial.Scheduler.Client.Service.IRegistrator {
        
        public RegistratorClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public RegistratorClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public RegistratorClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public RegistratorClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public RegistratorClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void RegisterClient(string clientName) {
            base.Channel.RegisterClient(clientName);
        }
        
        public System.Threading.Tasks.Task RegisterClientAsync(string clientName) {
            return base.Channel.RegisterClientAsync(clientName);
        }
    }
}
